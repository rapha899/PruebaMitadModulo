// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModeloDB;

namespace ModeloDB.Migrations
{
    [DbContext(typeof(Class1))]
    [Migration("20220124143831_ErFilms")]
    partial class ErFilms
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Modelo.Peliculas.film", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrentMovie")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fulltext")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("last_update")
                        .HasColumnType("datetime2");

                    b.Property<int>("length")
                        .HasColumnType("int");

                    b.Property<string>("rating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("relase_year")
                        .HasColumnType("int");

                    b.Property<string>("rental_duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("replacement_cost")
                        .HasColumnType("int");

                    b.Property<string>("special_fectures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("CurrentMovie");

                    b.ToTable("films");
                });

            modelBuilder.Entity("Modelo.Peliculas.inventory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrentFilmid")
                        .HasColumnType("int");

                    b.Property<DateTime>("last_update")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("CurrentFilmid");

                    b.ToTable("inventories");
                });

            modelBuilder.Entity("Modelo.Peliculas.language", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("last_update")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("languages");
                });

            modelBuilder.Entity("Modelo.Peliculas.film", b =>
                {
                    b.HasOne("Modelo.Peliculas.language", "language")
                        .WithMany("films")
                        .HasForeignKey("CurrentMovie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("language");
                });

            modelBuilder.Entity("Modelo.Peliculas.inventory", b =>
                {
                    b.HasOne("Modelo.Peliculas.film", "film")
                        .WithMany("inventories")
                        .HasForeignKey("CurrentFilmid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("film");
                });

            modelBuilder.Entity("Modelo.Peliculas.film", b =>
                {
                    b.Navigation("inventories");
                });

            modelBuilder.Entity("Modelo.Peliculas.language", b =>
                {
                    b.Navigation("films");
                });
#pragma warning restore 612, 618
        }
    }
}
